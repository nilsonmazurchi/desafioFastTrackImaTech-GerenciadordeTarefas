name: 🗑️ Destroy Koyeb Application

on:
  workflow_dispatch:  # Só executa manualmente

env:
  DOCKER_USER: nilsonmazurchi
  SERVICE_NAME: gerenciador-tarefas

jobs:
  destroy:
    name: 🗑️ Destroy Koyeb and Docker Images
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest image info
        id: image-info
        run: |
          # Pega a última imagem do Docker Hub
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "'${{ env.DOCKER_USER }}'", "password": "'${{ secrets.DOCKER_PASS }}'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Busca as tags disponíveis
          TAGS=$(curl -s -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}/tags/?page_size=10")
          
          # Pega a última tag (mais recente)
          LATEST_TAG=$(echo "$TAGS" | jq -r '.results[0].name' 2>/dev/null || echo "latest")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          
          echo "📦 Imagem a ser destruída: ${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}:$LATEST_TAG"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Destroy Koyeb Resources
        run: |
          echo "🗑️ DESTRUINDO APLICAÇÃO NO KOYEB..."  
          terraform -chdir=infra init      
          terraform -chdir=infra destroy -auto-approve
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
          # Usa a tag mais recente encontrada
          TF_VAR_docker_image_name: ${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}
          TF_VAR_docker_image_tag: ${{ steps.image-info.outputs.latest_tag }}

      - name: Destroy Docker Images
        run: |
          echo "🐳 DELETANDO IMAGENS DO DOCKER HUB..."
          
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "'${{ env.DOCKER_USER }}'", "password": "'${{ secrets.DOCKER_PASS }}'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Deleta várias tags possíveis
          TAGS_TO_DELETE=("latest" "1.0.${{ github.run_id }}" "${{ github.sha }}")
          
          for TAG in "${TAGS_TO_DELETE[@]}"; do
            echo "🗑️ Tentando deletar tag: $TAG"
            curl -X DELETE \
              -H "Authorization: JWT $TOKEN" \
              "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}/tags/$TAG/" \
              && echo "✅ Tag $TAG deletada" \
              || echo "⚠️  Tag $TAG não encontrada"
          done
          
          echo "🎯 DESTRUIÇÃO CONCLUÍDA!"