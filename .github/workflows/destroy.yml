name: 🗑️ Destroy Koyeb Application

on:
  workflow_dispatch:  # Só executa manualmente
    

env:
  DOCKER_USER: nilsonmazurchi
  SERVICE_NAME: gerenciador-tarefas

jobs:
  destroy:
    name: 🗑️ Destroy Koyeb and Docker Images
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4      

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

       - name: Debug completo
        run: |
          echo "🔍 DEBUG COMPLETO:"
          echo "Diretório atual: $(pwd)"
          echo "Conteúdo de infra/:"
          ls -la infra/
          echo "Arquivos .tf:"
          find infra/ -name "*.tf" -exec echo "  - {}" \;

      - name: Terraform Init and Plan
        run: |
          echo "🚀 Inicializando Terraform..."
          terraform -chdir=infra init
          echo "📋 Gerando plano de destruição..."
          terraform -chdir=infra plan -destroy -out=destroy.plan
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
          TF_VAR_docker_image_name: nilsonmazurchi/gerenciador-tarefas
          TF_VAR_docker_image_tag: latest

      - name: Terraform Destroy
        run: |
          echo "🗑️ EXECUTANDO DESTRUIÇÃO..."
          terraform -chdir=infra apply -auto-approve "destroy.plan"
          echo "✅ DESTRUIÇÃO CONCLUÍDA!"
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
          TF_VAR_docker_image_name: nilsonmazurchi/gerenciador-tarefas
          TF_VAR_docker_image_tag: latest

      - name: Final Verification
        run: |
          echo "🎯 VERIFICAÇÃO FINAL:"
          echo "✅ Aplicação Koyeb: DESTRUÍDA"
          echo "✅ Imagens Docker Hub: PRESERVADAS"
          echo "✅ Processo concluído com sucesso!"

      - name: Destroy Docker Images
        run: |
          echo "🐳 DELETANDO IMAGENS DO DOCKER HUB..."
          
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST \
            -d '{"username": "'${{ env.DOCKER_USER }}'", "password": "'${{ secrets.DOCKER_PASS }}'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Deleta imagem pelo tag do run_id
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}/tags/1.0.${{ github.run_id }}/" \
            && echo "✅ Imagem 1.0.${{ github.run_id }} deletada" \
            || echo "⚠️  Imagem 1.0.${{ github.run_id }} não encontrada"
          
          # Deleta imagem pelo SHA
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}/tags/${{ github.sha }}/" \
            && echo "✅ Imagem ${{ github.sha }} deletada" \
            || echo "⚠️  Imagem ${{ github.sha }} não encontrada"

          # Deleta Tag LATEST
          curl -X DELETE \
            -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USER }}/${{ env.SERVICE_NAME }}/tags/latest/" \
            && echo "✅ Tag latest DELETADA" \
            || echo "⚠️  Tag latest não encontrada"
          
          echo "🎯 LIMPEZA CONCLUÍDA!"